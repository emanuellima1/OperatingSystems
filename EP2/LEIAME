Emanuel Lima de Sousa - 9009493
João Seckler - 4603521

Compilação:
$ make

Execução:
$ ./ep2 <d> <n>


TODO

destruir threads - ok
velocidade - ok
ultrapassagem - ok

sorteio de velocidade
colocação
eliminação do último colocado
quebra
output
debug


PSEUDOCÓDIGO
main()
    inicializa todas as variáveis (aloca, dá init nos mutex e barriers)
    inicializa o vetor corredor_v (variável local) com n ciclistas
    cria uma thread para cada ciclista

    round = 0
    enquanto o número de corredores > 1:
        espera barreira[round]
        inicializa a barreira[!round] com o número atualizado de corredores
        espera barreira[round]
        desaloca threads que foram eliminadas
        round = !round

thread(struct corredor me)
    se vou tentar andar:
        se a posição à frente estiver vazia:
            anda para a posição da frente
            se remove da posição antiga
            atualiza sua própria posição (me->x)

        senão: vou tentar ultrapassar
            para i = me->y até i < 10:
                se pista[me->x][i] estiver livre:
                    se pista[me->x + 1][i] estiver livre:
                        anda para pista[me->x + 1][i]
                        se remove de pista[me->x][me->y]
                        atualiza sua própria posição
                        break

    se houver espaço à minha esquerda, vou para a esquerda

    se eu acabei de completar uma rodada:
        se eu quebrar:
            diminui corredor_count
            se remove da pista
            me->dead = 1
            return 0

OBSERVAÇÕES DE IMPLEMENTAÇÃO

- A corrida tem no máximo 2n voltas (caso em que ninguém "quebra"). Por
  isso o vetor "placing_count", que armazena na posição i quantos
  corredores já passaram pela i-ésima volta, tem tamanho 2n.

- Assim como na corrida real, os corredores começam antes da linha de
  chegada. O nosso algoritmo conta um "turno fantasma", onde uma variável
  turn é igual a -1, que corresponde a esse momento entre a partida e a
  primeira vez que o corredor passa pela linha de chegada.

- A posição x de cada corredor (deslocamento frente/trás) é guardada como o
  dobro do que de fato é. Para ler/escrever, dividimos inteiramente por 2.
  Quando houver alguém correndo a 90, essa constante passa a ser 6. Nesse
  caso vamos multiplicar todos os x por 3.

- Quando um ciclista correr rodadas suficientes para determinar sua
  posição em todas as rodadas da corrida, a thread correspondente é
  desalocada e tudo se passa como se esse corredor foi desalocado.

